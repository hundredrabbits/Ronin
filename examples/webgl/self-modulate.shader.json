{   "args": ["amount", "RECT"],
    "vertex": {
        "inputs": [
            {"name": "a_position", "qualifier": "attribute", "type": "vec2", "source": "RECT", "default": "FRAME"},
            {"name": "a_texCoord", "qualifier": "attribute", "type": "vec2", "source": "CANVAS"}
        ],
        "shaderCode": [
            "attribute vec2 a_position;"
            ,"attribute vec2 a_texCoord;"
            ,"uniform vec2 u_resolution;"
            ,"varying vec2 v_texCoord;"
            ,"void main() {"
            ,"  vec2 zeroToOne = a_position / u_resolution;"
            ,"  vec2 zeroToTwo = zeroToOne * 2.0;"
            ,"  vec2 clipSpace = zeroToTwo - 1.0;"
            ,"  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);"
            ,"  v_texCoord = a_texCoord;"
            ,"}"
        ]
    },
    "fragment": {
        "inputs": [
            {"name": "u_amount", "qualifier": "uniform", "type": "float", "source": "args[0]"}
        ],
        "shaderCode": [
            "precision highp float;"
            ,"uniform sampler2D u_image;"
            ,"uniform float u_amount;"
            ,"varying vec2 v_texCoord;"
            ,"vec2 modulate(vec2 st, vec4 c1, float amount){"
            ,"        return st + c1.xy*amount;"
            ,"}"
            ,"void main() {"
            ,"    vec2 coord = modulate(v_texCoord, texture2D(u_image, v_texCoord), u_amount);"
            ,"    gl_FragColor = texture2D(u_image, coord);"
            ,"}"
        ]
    }
}