{
    "args": ["pixelX","pixelY","RECT"],
    "vertex": {
        "inputs": [
            {"name": "a_position", "qualifier": "attribute", "type": "vec2", "source": "RECT", "default": "FRAME"},
            {"name": "a_texCoord", "qualifier": "attribute", "type": "vec2", "source": "CANVAS"}
        ],
        "shaderCode": [
            "attribute vec2 a_position;"
            ,"attribute vec2 a_texCoord;"
            ,"uniform vec2 u_resolution;"
            ,"varying vec2 v_texCoord;"
            ,"void main() {"
            ,"  vec2 zeroToOne = a_position / u_resolution;"
            ,"  vec2 zeroToTwo = zeroToOne * 2.0;"
            ,"  vec2 clipSpace = zeroToTwo - 1.0;"
            ,"  gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);"
            ,"  v_texCoord = a_texCoord;"
            ,"}"
        ]
    },
    "fragment": {
        "inputs": [
            {"name": "u_pixelX", "qualifier": "uniform", "type": "float", "source": "args[0]"},
            {"name": "u_pixelY", "qualifier": "uniform", "type": "float", "source": "args[1]"}
        ],
        "shaderCode": [
            "precision highp float;"
            ,"uniform float u_pixelX;"
            ,"uniform float u_pixelY;"
            ,"uniform sampler2D u_image;"
            ,"varying vec2 v_texCoord;"
            ,"vec2 pixelate(vec2 st, float pixelX, float pixelY){"
            ,"    vec2 xy = vec2(pixelX, pixelY);"
            ,"    return (floor(st * xy) + 0.5)/xy;"
            ,"}"
            ,"void main() {"
            ,"    vec2 coord = pixelate(v_texCoord, u_pixelX, u_pixelY);"
            ,"    gl_FragColor = texture2D(u_image, coord);"
            ,"}"
        ]
    }
}